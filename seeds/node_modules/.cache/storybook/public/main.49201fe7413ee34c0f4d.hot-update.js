"use strict";
globalThis["webpackHotUpdateseeds"]("main",{

/***/ "./src/theme/index.tsx":
/*!*****************************!*\
  !*** ./src/theme/index.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/styles/createTheme.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");


const theme = (0,_mui_material__WEBPACK_IMPORTED_MODULE_0__["default"])({
  spacing: 4,
  palette: {
    mainBackground: {
      main: '#040407'
    },
    backgroundElevation1: {
      main: "#201F24"
    },
    textColor: {
      main: "#E8E7F0"
    },
    primaryPurple600: {
      main: "#393552"
    },
    primaryPurple500: {
      main: "#6C5DD3"
    },
    grey100: {
      main: "#262529"
    },
    primaryPurple400: {
      main: "#B4A9FF"
    },
    backgroundElevation2: {
      main: "#2D2D30"
    },
    background: {
      default: 'linear-gradient(85.82deg, #6B4DE0 -10.12%, #9C42E3 53.21%, #C339E5 106.12%)'
    }
  },
  typography: {
    title: {
      fontSize: '36px',
      lineHeight: '22px',
      fontWeight: '700',
      textTransform: 'none',
      fontFamily: ['Gilroy', 'sans-serif'].join(',')
    },
    h1: {
      fontSize: '24px',
      lineHeight: '28px',
      fontWeight: '700',
      textTransform: 'none',
      fontFamily: ['Gilroy', 'sans-serif'].join(',')
    },
    h2: {
      fontSize: '24px',
      lineHeight: '29.4px',
      fontWeight: '600',
      textTransform: 'none',
      fontFamily: ['Gilroy', 'sans-serif'].join(',')
    },
    body1: {
      fontSize: "16px",
      fontWeight: 500,
      lineHeight: "22.4px",
      textTransform: "none"
    },
    body2: {
      fontSize: "14px",
      fontWeight: 600,
      lineHeight: "17.14px",
      textTransform: "none"
    },
    caption: {
      fontSize: "12px",
      fontWeight: 500,
      lineHeight: "14.64px",
      textTransform: "none"
    },
    button: {
      fontSize: "16px",
      fontWeight: 600,
      lineHeight: "19px",
      textTransform: "none"
    }
  },
  breakpoints: {
    values: {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    }
  },
  components: {
    MuiCard: {
      styleOverrides: {
        root: {
          background: '#201F24'
        }
      }
    }
  }
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (theme);

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    Theme.displayName = "Theme";
    // @ts-ignore
    Theme.__docgenInfo = { "description": "Our [TypeScript guide on theme customization](https://mui.com/material-ui/guides/typescript/#customization-of-theme) explains in detail how you would add custom properties.", "displayName": "Theme", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/theme/index.tsx#Theme"] = { docgenInfo: Theme.__docgenInfo, name: "Theme", path: "src/theme/index.tsx#Theme" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=main.49201fe7413ee34c0f4d.hot-update.js.map