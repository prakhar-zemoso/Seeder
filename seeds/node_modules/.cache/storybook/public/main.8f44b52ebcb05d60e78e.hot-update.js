"use strict";
globalThis["webpackHotUpdateseeds"]("main",{

/***/ "./src/Components/Atoms/MyData/index.stories.tsx":
/*!*******************************************************!*\
  !*** ./src/Components/Atoms/MyData/index.stories.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TempData": () => (/* binding */ TempData),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./src/Components/Atoms/MyData/index.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/home/prakhar.pandey/Desktop/SEEDERPIP/seeds/src/Components/Atoms/MyData/index.stories.tsx";

/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { ComponentMeta, ComponentStory } from '@storybook/react';\nimport React from 'react'\nimport Data from './index'\n\n\n\nexport default {\n    title:\"Atoms/Text Data\",\n    component: Data\n}as ComponentMeta<typeof Data>;\n\nconst Template: ComponentStory<typeof Data> = (args)=>(\n    <Data {...args}></Data>\n)\n\nexport const TempData = Template.bind({});\n\nTempData.args={\n    label:\"Term Cap\",\n    value: \"12 Months\"\n}\n\n\n\n"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "TempData": {
    "startLoc": {
      "col": 46,
      "line": 12
    },
    "endLoc": {
      "col": 1,
      "line": 14
    },
    "startBody": {
      "col": 46,
      "line": 12
    },
    "endBody": {
      "col": 1,
      "line": 14
    }
  }
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Atoms/Text Data",
  component: _index__WEBPACK_IMPORTED_MODULE_1__["default"]
});

const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_index__WEBPACK_IMPORTED_MODULE_1__["default"], { ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 21,
  columnNumber: 5
}, undefined);

_c = Template;
const TempData = Template.bind({});
TempData.args = {
  label: "Term Cap",
  value: "12 Months"
};
TempData.parameters = {
  storySource: {
    source: "(args)=>(\n    <Data {...args}></Data>\n)"
  },
  ...TempData.parameters
};

var _c;

__webpack_require__.$Refresh$.register(_c, "Template");
const __namedExportsOrder = ["TempData"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.8f44b52ebcb05d60e78e.hot-update.js.map